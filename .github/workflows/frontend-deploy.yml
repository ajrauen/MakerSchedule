# .github/workflows/frontend-deploy.yml
name: Deploy Frontend to VPS

on:
  push:
    branches: [main]
    paths:
      - "MakerScheduleFE/**"
      - ".github/workflows/frontend-deploy.yml"
  workflow_dispatch: # Allow manual trigger

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: MakerScheduleFE/package-lock.json

      - name: Install dependencies
        working-directory: MakerScheduleFE
        run: npm ci

      - name: Build frontend
        working-directory: MakerScheduleFE
        run: npm run build
        env:
          NODE_ENV: production
          VITE_SERVER_URI: /api

      - name: Create deployment package
        run: |
          mkdir -p frontend-deployment
          cp -r MakerScheduleFE/dist/* frontend-deployment/

      - name: Copy frontend files to VPS
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          passphrase: ${{ secrets.VPS_SSH_PASSPHRASE }}
          source: "frontend-deployment/*"
          target: "/tmp/makerschedule-frontend"
          strip_components: 1
          timeout: 120s
          command_timeout: 300s

      - name: Deploy frontend to nginx directory
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          passphrase: ${{ secrets.VPS_SSH_PASSPHRASE }}
          timeout: 60s
          command_timeout: 120s
          script: |
            # Create backup of existing frontend if it exists
            if [ -d /var/www/makerschedule ]; then
              echo "Creating backup of existing frontend..."
              sudo rm -rf /var/www/makerschedule.backup
              sudo cp -r /var/www/makerschedule /var/www/makerschedule.backup
            fi

            # Remove old frontend files
            sudo rm -rf /var/www/makerschedule/*

            # Copy new frontend files
            echo "Deploying new frontend files..."
            sudo cp -r /tmp/makerschedule-frontend/* /var/www/makerschedule/

            # Set proper permissions
            sudo chown -R www-data:www-data /var/www/makerschedule
            sudo chmod -R 755 /var/www/makerschedule

            # Verify deployment
            echo "Verifying deployment..."
            ls -la /var/www/makerschedule

            # Test nginx configuration
            echo "Testing nginx configuration..."
            docker exec makerschedule_nginx nginx -t || echo "Nginx config test failed"

            # Reload nginx to pick up new files (if needed)
            echo "Reloading nginx..."
            docker exec makerschedule_nginx nginx -s reload || echo "Nginx reload not needed or failed"

            # Cleanup temp files
            rm -rf /tmp/makerschedule-frontend

            echo "Frontend deployment complete!"
            echo "Visit https://${{ secrets.DOMAIN_NAME }} to see your application"

      - name: Verify deployment
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          passphrase: ${{ secrets.VPS_SSH_PASSPHRASE }}
          script: |
            echo "Checking frontend files..."
            echo "Total files deployed:"
            find /var/www/makerschedule -type f | wc -l

            echo ""
            echo "Main files:"
            ls -lh /var/www/makerschedule/

            echo ""
            echo "Testing HTTP access..."
            curl -I http://localhost/ 2>/dev/null | head -5 || echo "Local HTTP test failed"
