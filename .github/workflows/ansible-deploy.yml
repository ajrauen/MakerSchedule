name: Deploy with Ansible

on:
  push:
    branches: [main]
    paths:
      - "MakeScheduleBE/**"
      - "ansible/**"
      - ".github/workflows/ansible-deploy.yml"
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.0.x"

      - name: Build and Publish
        run: |
          dotnet restore MakeScheduleBE/MakerSchedule.sln
          dotnet build MakeScheduleBE/MakerSchedule.sln --configuration Release --no-restore
          dotnet publish MakeScheduleBE/MakerSchedule.API/MakerSchedule.API.csproj --configuration Release --output ./publish --no-build

      - name: Install Ansible
        run: |
          sudo apt-get update
          sudo apt-get install -y ansible rsync
          ansible-galaxy collection install community.docker:>=3.0.0
      - name: Copy Ansible files to VPS
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          passphrase: ${{ secrets.VPS_SSH_PASSPHRASE }}
          source: "ansible/*,publish/*,Dockerfile,docker-compose.production.yml,nginx.conf"
          target: "/tmp/ansible-deploy"
          strip_components: 0
          timeout: 120s

      - name: Run Ansible Playbook on VPS
        uses: appleboy/ssh-action@v0.1.5
        env:
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          JWT_KEY: ${{ secrets.JWT_KEY }}
          DOMAIN_NAME: ${{ secrets.DOMAIN_NAME }}
          ADMIN_EMAIL: ${{ secrets.ADMIN_EMAIL }}
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          passphrase: ${{ secrets.VPS_SSH_PASSPHRASE }}
          timeout: 300s
          command_timeout: 600s
          envs: DB_PASSWORD,JWT_KEY,DOMAIN_NAME,ADMIN_EMAIL
          script: |
            cd /tmp/ansible-deploy

            # Install Ansible if not present
            if ! command -v ansible &> /dev/null; then
              echo "Installing Ansible..."
              sudo apt-get update
              sudo apt-get install -y ansible
              ansible-galaxy collection install community.docker:>=3.0.0
            fi

            # Run playbook with environment variables
            export DB_PASSWORD="${DB_PASSWORD}"
            export JWT_KEY="${JWT_KEY}"
            export DOMAIN_NAME="${DOMAIN_NAME}"
            export ADMIN_EMAIL="${ADMIN_EMAIL}"

            # Run on localhost (we're already on the server)
            ansible-playbook -i "localhost," -c local ansible/deploy-backend.yml \
              -e "deploy_dir=/tmp/makerschedule-deploy" \
              -e "ansible_python_interpreter=/usr/bin/python3"

      - name: Cleanup
        if: always()
        run: rm -f ~/.ssh/id_ed25519
