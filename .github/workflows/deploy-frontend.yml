name: Deploy Frontend

on:
  push:
    branches: [main]
    paths:
      - "MakerScheduleFE/**"
  workflow_dispatch:

jobs:
  deploy-frontend:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: MakerScheduleFE/package-lock.json

      - name: Install dependencies
        working-directory: MakerScheduleFE
        run: npm ci

      - name: Build frontend
        working-directory: MakerScheduleFE
        run: npm run build

      - name: Create deployment archive
        run: |
          cd MakerScheduleFE/dist
          tar -czf ../../frontend-dist.tar.gz .

      - name: Deploy frontend files only
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          passphrase: ${{ secrets.VPS_SSH_PASSPHRASE }}
          timeout: 120s
          command_timeout: 120s
          script: |
            echo "Starting frontend deployment..."

            # Wait a moment to avoid overwhelming SSH
            sleep 5

            # Create frontend directory if it doesn't exist
            sudo mkdir -p /var/www/makerschedule
            sudo chown -R $USER:$USER /var/www/makerschedule

            # Create temporary directory for new files
            mkdir -p /tmp/frontend-new

            echo "Frontend directory prepared"

      - name: Upload frontend files
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          passphrase: ${{ secrets.VPS_SSH_PASSPHRASE }}
          source: "frontend-dist.tar.gz"
          target: "/tmp/"
          timeout: 180s
          command_timeout: 180s

      - name: Extract and deploy files
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          passphrase: ${{ secrets.VPS_SSH_PASSPHRASE }}
          timeout: 120s
          command_timeout: 120s
          script: |
            echo "Extracting frontend files..."
            cd /tmp
            tar -xzf frontend-dist.tar.gz -C /tmp/frontend-new

            # Backup current frontend (if exists)
            if [ -d "/var/www/makerschedule" ] && [ "$(ls -A /var/www/makerschedule)" ]; then
              sudo mv /var/www/makerschedule /var/www/makerschedule.backup.$(date +%s)
            fi

            # Deploy new frontend
            sudo mkdir -p /var/www/makerschedule
            sudo cp -r /tmp/frontend-new/* /var/www/makerschedule/
            sudo chown -R www-data:www-data /var/www/makerschedule

            # Cleanup
            rm -rf /tmp/frontend-new
            rm -f /tmp/frontend-dist.tar.gz

            echo "Frontend deployed successfully!"
            echo "Frontend files are now served by the existing nginx configuration"
