version: "3.8"

services:
  postgres:
    image: postgres:15
    container_name: makerschedule_postgres
    environment:
      POSTGRES_DB: makerschedule
      POSTGRES_USER: appuser
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U appuser -d makerschedule"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - makerschedule-network

  api:
    build:
      context: .
      dockerfile: Dockerfile
    image: makerschedule_api:latest
    container_name: makerschedule_api
    depends_on:
      postgres:
        condition: service_healthy
    expose:
      - "5000"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ConnectionStrings__DefaultConnection=Host=postgres;Port=5432;Database=makerschedule;Username=appuser;Password=${DB_PASSWORD}
      - Jwt__Key=${JWT_KEY}
      - UseAzureKeyVault=false
      - UseAzureStorage=false
    volumes:
      - api_wwwroot:/app/wwwroot
    restart: unless-stopped
    networks:
      - makerschedule-network

  nginx:
    image: nginx:alpine
    container_name: makerschedule_nginx
    depends_on:
      - api
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - /var/www/makerschedule:/var/www/makerschedule:ro
      - certbot_webroot:/var/www/certbot
      - certbot_certs:/etc/letsencrypt
    restart: unless-stopped
    networks:
      - makerschedule-network

  certbot:
    image: certbot/certbot
    container_name: makerschedule_certbot
    volumes:
      - certbot_webroot:/var/www/certbot
      - certbot_certs:/etc/letsencrypt
    command: certonly --webroot --webroot-path=/var/www/certbot --email ${ADMIN_EMAIL} --agree-tos --no-eff-email -d ${DOMAIN_NAME}

volumes:
  postgres_data:
  api_wwwroot:
  certbot_webroot:
  certbot_certs:

networks:
  makerschedule-network:
    driver: bridge
